dist: trusty
language: generic
services: docker
sudo: false
os: linux

.com.github.junaruga.ci-multi-arch-test.matrix-definitions:
  - &test_arch_simple
    install:
      - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    script:
      - |
        IMAGE=""
        if [ "${OS_NAME}" = "ubuntu" -o "${OS_NAME}" = "debian" ]; then
          IMAGE="multiarch/${OS_NAME}-debootstrap:${ARCH}-${OS_VERSION}"
        elif [ "${OS_NAME}" = "centos" ]; then
          IMAGE="multiarch/${OS_NAME}:${OS_VERSION}-${ARCH}-iso"
        elif [ "${OS_NAME}" = "fedora" ]; then
          IMAGE="multiarch/${OS_NAME}:${OS_VERSION}-${ARCH}"
        fi
        echo "IMAGE: ${IMAGE}"
        docker run --rm -t "${IMAGE}" uname -a
  - &test_no_arch
    install: true
    script: ./sample_test.sh

matrix:
  include:
    # Intel, 64-bit, Little-endian
    - name: x86_64-linux
      <<: *test_no_arch
    # Intel, 32-bit, Little-endian
    - name: i386-linux
      sudo: required
      env:
        - ARCH=i386
    # ARM, 64-bit, Little-endian
    - name: aarch64-linux
      sudo: required
      env:
        - ARCH=arm64
    # ARM, 32-bit, Little-endian
    - name: armv7l-linux
      sudo: required
      env:
        - ARCH=armhf
    # PowerPC, 64-bit, Little-endian
    - name: ppc64le-linux
      os: linux-ppc64le
      <<: *test_no_arch
    # IBM Z and LinuxONE, 64-bit, Big-endian
    - name: s390x-linux
      sudo: required
      env:
        - OS_NAME=debian
        - OS_VERSION=jessie
        - ARCH=s390x
    - name: s390x-linux-simple
      sudo: required
      env:
        - OS_NAME=debian
        - OS_VERSION=jessie
        - ARCH=s390x
      <<: *test_arch_simple
      # You can run non-important job only for cron mode
      # or any specific environment variable (ex: CI_CRON: 1) is set.
      if: type = cron OR env(CI_CRON) = 1
    # ARM, 64-bit, Little-endian
    - name: centos-aarch64-linux-simple
      sudo: required
      env:
        - OS_NAME=centos
        - OS_VERSION=7
        - ARCH=aarch64
      <<: *test_arch_simple
    # PowerPC, 64-bit, Big-endian
    - name: centos-ppc64-linux-simple
      sudo: required
      env:
        - OS_NAME=centos
        - OS_VERSION=7
        - ARCH=ppc64
      <<: *test_arch_simple
    # ARM, 64-bit, Little-endian
    - name: fedora-aarch64-linux-simple
      sudo: required
      env:
        - OS_NAME=fedora
        - OS_VERSION=25
        - ARCH=aarch64
      <<: *test_arch_simple
    # PowerPC, 64-bit, Big-endian
    - name: fedora-ppc64-linux-simple
      sudo: required
      env:
        - OS_NAME=fedora
        - OS_VERSION=25
        - ARCH=ppc64
      <<: *test_arch_simple
  allow_failures:
    - name: centos-ppc64-linux-simple
  fast_finish: true
before_install:
  # Show environment.
  - uname -a
  - id
  - pwd
  - "OS_NAME=${OS_NAME:-ubuntu}"
  - "OS_VERSION=${OS_VERSION:-bionic}"
  - "echo OS_NAME=${OS_NAME} OS_VERSION=${OS_VERSION} ARCH=${ARCH} BUILD_TYPE=${BUILD_TYPE}"
install:
  - docker run --rm --privileged multiarch/qemu-user-static:register --reset
  - |
    travis_retry docker build --rm -t sample \
      --build-arg OS_NAME=${OS_NAME} \
      --build-arg OS_VERSION=${OS_VERSION} \
      --build-arg ARCH=${ARCH} \
      .
script:
  - docker run --rm -t sample ./sample_test.sh
branches:
  only:
    - master
