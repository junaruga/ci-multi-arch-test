dist: xenial
language: bash
services: docker
os: linux

.com.github.junaruga.ci-multi-arch-test.matrix-definitions:
  - &test_arch_simple
    install:
      - ls /proc/sys/fs/binfmt_misc/
      - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - ls /proc/sys/fs/binfmt_misc/
    script:
      - "echo BASE_IMAGE: ${BASE_IMAGE}"
      - docker run --rm -t "${BASE_IMAGE}" uname -a
  - &test_no_arch
    install: true
    script: ./sample_test.sh

matrix:
  include:
    # Intel, 64-bit, Little-endian
    - name: x86_64-linux
      <<: *test_no_arch
    # Intel, 32-bit, Little-endian
    - name: i386-linux
      env:
        - BASE_IMAGE=i386/ubuntu
    # ARM, 64-bit, Little-endian
    - name: aarch64-linux
      env:
        - BASE_IMAGE=arm64v8/ubuntu
    # ARM, 32-bit, Little-endian
    - name: arm32-linux
      env:
        - BASE_IMAGE=arm32v7/ubuntu
    # PowerPC, 64-bit, Little-endian
    - name: ppc64le-linux
      os: linux-ppc64le
      <<: *test_no_arch
    # IBM Z and LinuxONE, 64-bit, Big-endian
    - name: s390x-linux
      env:
        - BASE_IMAGE=s390x/ubuntu
    - name: s390x-linux-simple
      env:
        - BASE_IMAGE=s390x/debian
        - OS_NAME=debian
      <<: *test_arch_simple
      # You can run non-important job only for cron mode
      # or any specific environment variable (ex: CI_CRON: 1) is set.
      if: type = cron OR env(CI_CRON) = 1
    # ARM, 64-bit, Little-endian
    - name: centos-aarch64-linux
      env:
        - BASE_IMAGE=arm64v8/centos
        - OS_NAME=centos
    - name: centos-aarch64-linux-simple
      env:
        - BASE_IMAGE=arm64v8/centos
        - OS_NAME=centos
      <<: *test_arch_simple
    # PowerPC, 64-bit, Little-endian
    - name: centos-ppc64le-linux
      env:
        - BASE_IMAGE=ppc64le/centos
        - OS_NAME=centos
    - name: centos-ppc64le-linux-simple
      env:
        - BASE_IMAGE=ppc64le/centos
        - OS_NAME=centos
      <<: *test_arch_simple
    # ARM, 64-bit, Little-endian
    - name: fedora-aarch64-linux
      env:
        - BASE_IMAGE=arm64v8/fedora
        - OS_NAME=fedora
    - name: fedora-aarch64-linux-simple
      env:
        - BASE_IMAGE=arm64v8/fedora
        - OS_NAME=fedora
      <<: *test_arch_simple
    # PowerPC, 64-bit, Big-endian
    - name: fedora-s390x-linux
      env:
        - BASE_IMAGE=s390x/fedora
        - OS_NAME=fedora
    - name: fedora-s390x-linux-simple
      env:
        - BASE_IMAGE=s390x/fedora
        - OS_NAME=fedora
      <<: *test_arch_simple
  allow_failures:
  fast_finish: true
before_install:
  # Show environment.
  - uname -a
  - id
  - pwd
  - "OS_NAME=${OS_NAME:-ubuntu}"
  - "BASE_IMAGE=${BASE_IMAGE:ubuntu}"
install:
  - ls /proc/sys/fs/binfmt_misc/
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - ls /proc/sys/fs/binfmt_misc/
  - |
    travis_retry docker build --rm -t sample \
      --build-arg BASE_IMAGE=${BASE_IMAGE} \
      -f Dockerfile-${OS_NAME} \
      .
script:
  - docker run --rm -t sample ./sample_test.sh
branches:
  only:
    - master
