dist: trusty
language: generic
services: docker
sudo: false
os: linux
matrix:
  include:
    - name: x86_64-linux
    - name: i386-linux
      sudo: required
      env:
        - ARCH=i386
    - name: aarch64-linux
      sudo: required
      env:
        - ARCH=arm64
    - name: armv7l-linux
      sudo: required
      env:
        - ARCH=armhf
    - name: ppc64le-linux
      os: linux-ppc64le
    - name: s390x-linux
      sudo: required
      env:
        - OS_NAME=debian
        - OS_VERSION=jessie
        - ARCH=s390x
    - name: s390x-linux-simple
      sudo: required
      env:
        - BUILD_TYPE="arch-simple"
        - OS_NAME=debian
        - OS_VERSION=jessie
        - ARCH=s390x
      # You can run non-important job only for cron mode
      # or any specific environment variable (ex: CI_CRON: 1) is set.
      if: type = cron OR env(CI_CRON) = 1
install:
  - "OS_NAME=${OS_NAME:-ubuntu}"
  - "OS_VERSION=${OS_VERSION:-bionic}"
  - "echo OS_NAME=${OS_NAME} OS_VERSION=${OS_VERSION} ARCH=${ARCH} BUILD_TYPE=${BUILD_TYPE}"
  # Prepare QEMU.
  # https://github.com/multiarch/qemu-user-static
  # https://hub.docker.com/r/multiarch/ubuntu-debootstrap/tags/
  - |
    if [ "${ARCH}" != "" ]; then
      docker run --rm --privileged multiarch/qemu-user-static:register --reset
    fi
  # Build container image.
  - |
    if [ "${ARCH}" != "" ]; then
      if [ "${BUILD_TYPE}" = "" ]; then
        docker build --rm -t sample \
          --build-arg OS_NAME=${OS_NAME} \
          --build-arg OS_VERSION=${OS_VERSION} \
          --build-arg ARCH=${ARCH} \
          .
      fi
    fi
before_script:
  # Show environment.
  - uname -a
  - id
  - pwd
script:
  - |
    if [ "${ARCH}" != "" ]; then
      if [ "${BUILD_TYPE}" = "" ]; then
        docker run --rm -t sample ./sample_test.sh
      fi
    fi
  - |
    if [ "${ARCH}" != "" ]; then
      if [ "${BUILD_TYPE}" = "arch-simple" ]; then
        docker run --rm -t multiarch/${OS_NAME}-debootstrap:${ARCH}-${OS_VERSION} uname -a
      fi
    fi
  - |
    if [ "${ARCH}" = "" ]; then
      ./sample_test.sh
    fi
branches:
  only:
    - master
